version: 2.1

orbs:
  node: circleci/node@5.0.2

executors:
  clever-cloud-deployer:
    docker:
      - image: cimg/node:lts
  app-builder:
    docker:
      - image: cimg/node:16.15
  e2e-runner:
    docker:
      - image: mcr.microsoft.com/playwright:v1.30.0-focal
      - image: postgres
        environment:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
      - image: prismagraphql/prisma:1.34.10
        environment:
          PRISMA_CONFIG: |
            port: 4466
            managementApiSecret: my-secret-42
            databases:
              default:
                connector: postgres
                host: localhost
                port: 5432
                user: prisma
                password: prisma
                migrations: true

jobs:
  server-lint:
    executor: app-builder
    steps:
      - checkout
      - node/install-packages:
          app-dir: server
      - run:
          command: npm run lint
          working_directory: server
      - run:
          command: npm run prettier:check
          working_directory: server

  client-lint:
    executor: app-builder
    steps:
      - checkout
      - node/install-packages:
          app-dir: client
      - run:
          command: npm run lint
          working_directory: client
      - run:
          command: npm run prettier:check
          working_directory: client
  e2e-lint:
    executor: app-builder
    steps:
      - checkout
      - node/install-packages:
          app-dir: e2e
      - run:
          command: npm run lint
          working_directory: e2e
      - run:
          command: npm run prettier:check
          working_directory: e2e
  test:
    executor: e2e-runner
    steps:
      - checkout
      - setup_remote_docker
      - node/install-packages:
          app-dir: e2e
      - node/install-packages:
          app-dir: server
      - node/install-packages:
          app-dir: client
      - run:
          command: npm install -g wait-on
      - run:
          command: npm start
          working_directory: client
          background: true
      - run:
          command: npm start
          working_directory: server
          background: true
      - run:
          command: |
            wait-on http://localhost:4466
            npm run new_service default/default
          working_directory: server
          environment:
            PRISMA_URL: http://localhost:4466
            PRISMA_API_SECRET: secret-42
            PRISMA_MANAGEMENT_API_SECRET: my-secret-42
            AUTH0_DOMAIN: auth0Domain
            AUTH0_CLIENT_ID: auth0ClientId
            ALGOLIA_APP_ID: M0NJ0PGAH1
            ALGOLIA_API_KEY_ALL: 512b7a54729ce1a9a33565346332d26d
      - run:
          command: |
            wait-on http://localhost:3000
            wait-on http://localhost:4466
            npx playwright install --with-deps chromium
            npm list playwright
            npm run test
          working_directory: e2e
          environment:
            PRISMA_URL: http://localhost:4466
            PRISMA_API_SECRET: secret-42
            PRISMA_MANAGEMENT_API_SECRET: my-secret-42
            SERVICE_NAME: default
            SERVICE_STAGE: default
            ALGOLIA_APP_ID: M0NJ0PGAH1
            ALGOLIA_API_KEY_ALL: 512b7a54729ce1a9a33565346332d26d
            SKIP_AUTH: true
            REACT_APP_DISABLE_AUTH: true
      - store_test_results:
          path: ./e2e/results.xml

  client-build:
    executor: app-builder
    steps:
      - checkout
      - node/install-packages:
          app-dir: client
      - run:
          command: npm run build
          working_directory: client
      - persist_to_workspace:
          root: .
          paths:
            - client/build/

  prisma-deploy:
    parameters:
      clever-app-id:
        type: string
      deploy-dir:
        type: string
        default: ~/prisma_deploy
    executor: clever-cloud-deployer
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Package application
          command: |
            mkdir -p << parameters.deploy-dir >>
            cp server/prisma/Dockerfile.clever-cloud << parameters.deploy-dir >>/Dockerfile
            cd << parameters.deploy-dir >>
            git config --global user.email "dsi-ext@zenika.com"
            git config --global user.name "Zenika"
            git init
            git add .
            git commit -m "deploy!"
      - run:
          name: Deploy to Clever Cloud
          working_directory: << parameters.deploy-dir >>
          command: |
            sudo npm install --global clever-tools
            clever login --secret=$CLEVER_SECRET --token=$CLEVER_TOKEN
            clever link << parameters.clever-app-id >>
            clever deploy --force

  app-deploy:
    parameters:
      clever-app-id:
        type: string
      deploy-dir:
        type: string
        default: ~/deploy
    executor: clever-cloud-deployer
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Package application
          command: |
            mkdir -p << parameters.deploy-dir >>
            cp -R server/* << parameters.deploy-dir >>/
            cp -R client/build/ << parameters.deploy-dir >>/front_build
            cd << parameters.deploy-dir >>
            cp prisma/prisma.yml scripts/prisma_deploy_all/
            cp prisma/datamodel.graphql scripts/prisma_deploy_all/
            git config --global user.email "dsi-ext@zenika.com"
            git config --global user.name "Zenika"
            git init
            git add .
            git commit -m "deploy!"
      - run:
          name: Deploy to Clever Cloud
          working_directory: << parameters.deploy-dir >>
          command: |
            sudo npm install --global clever-tools
            clever login --secret=$CLEVER_SECRET --token=$CLEVER_TOKEN
            clever link << parameters.clever-app-id >>
            clever deploy --force

workflows:
  version: 2
  build-deploy:
    jobs:
      - server-lint
      - client-lint
      - e2e-lint
      - test
      - client-build
      - app-deploy:
          clever-app-id: app_c61407ae-b417-4406-86ed-cfd1acf84466
          context: clever-cloud-deployment
          requires:
            - server-lint
            - client-lint
            - client-build
          filters:
            branches:
              only: main
      - prisma-deploy:
          clever-app-id: app_f9c5c1cb-fe9c-41f9-a6c0-793e8326e95b
          context: clever-cloud-deployment
          requires:
            - app-deploy
