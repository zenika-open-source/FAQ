version: 2.1

references:
  workspace_root: &workspace_root /home/circleci/my-workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

executors:
  clever-cloud-deployer:
    docker:
      - image: cimg/node:lts
  app-builder:
    docker:
      - image: cimg/node:10.24.1

jobs:
  server-install:
    working_directory: *workspace_root
    executor: app-builder
    steps:
      - checkout

      - run: |
          cd server/
          npm ci

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - server/node_modules/

  server-lint:
    working_directory: *workspace_root
    executor: app-builder
    steps:
      - checkout
      - *attach_workspace

      - run: |
          cd server/
          npm run lint
          npm run prettier:check

  client-install:
    working_directory: *workspace_root
    executor: app-builder
    steps:
      - checkout

      - run: |
          cd client/
          npm ci

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - client/node_modules/

  client-lint:
    working_directory: *workspace_root
    executor: app-builder
    steps:
      - checkout
      - *attach_workspace

      - run: |
          cd client/
          npm run lint
          npm run prettier:check

  client-build:
    working_directory: *workspace_root
    executor: app-builder
    steps:
      - checkout
      - *attach_workspace

      - run: |
          cd client/
          npm run build

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - client/build/

  prisma-deploy:
    environment:
      DEPLOY_DIR: ~/prisma_deploy
      CLEVER_CLOUD_REMOTE_HOST: push-par-clevercloud-customers.services.clever-cloud.com
      CLEVER_CLOUD_REMOTE_APP_ID: app_f9c5c1cb-fe9c-41f9-a6c0-793e8326e95b
    working_directory: *workspace_root
    executor: clever-cloud-deployer
    steps:
      - checkout
      - *attach_workspace

      - add_ssh_keys:
          fingerprints:
            - "6f:f2:b4:c2:e5:13:28:f8:02:2d:da:48:34:0c:14:7f"

      - run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${CLEVER_CLOUD_REMOTE_HOST} >> ~/.ssh/known_hosts
          mkdir -p ${DEPLOY_DIR}
          cp server/prisma/Dockerfile.clever-cloud ${DEPLOY_DIR}/Dockerfile
          cd ${DEPLOY_DIR}
          git init
          git config user.email "dsi-ext@zenika"
          git config user.name "DSI Ext"
          git add .
          git commit -m "Deploy"
          git remote add clever git+ssh://git@${CLEVER_CLOUD_REMOTE_HOST}/${CLEVER_CLOUD_REMOTE_APP_ID}.git
          git push --force clever master

  app-deploy:
    environment:
      DEPLOY_DIR: ~/deploy
      CLEVER_CLOUD_REMOTE_HOST: push-par-clevercloud-customers.services.clever-cloud.com
      CLEVER_CLOUD_REMOTE_APP_ID: app_c61407ae-b417-4406-86ed-cfd1acf84466
    working_directory: *workspace_root
    executor: clever-cloud-deployer
    steps:
      - checkout
      - *attach_workspace

      - add_ssh_keys:
          fingerprints:
            - "6f:f2:b4:c2:e5:13:28:f8:02:2d:da:48:34:0c:14:7f"

      - run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${CLEVER_CLOUD_REMOTE_HOST} >> ~/.ssh/known_hosts
          mkdir -p ${DEPLOY_DIR}
          cp -R server/* ${DEPLOY_DIR}/
          cp -R client/build/ ${DEPLOY_DIR}/front_build
          cd ${DEPLOY_DIR}
          cp prisma/prisma.yml scripts/prisma_deploy_all/
          cp prisma/datamodel.graphql scripts/prisma_deploy_all/
          git init
          git config user.email "dsi-ext@zenika.com"
          git config user.name "DSI Ext"
          echo "node_modules/" > .gitignore
          git add .gitignore
          git add -A
          git commit -m "Deploy"
          git remote add clever git+ssh://git@${CLEVER_CLOUD_REMOTE_HOST}/${CLEVER_CLOUD_REMOTE_APP_ID}.git
          git push --force clever master
          npm run deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - server-install
      - server-lint:
          requires:
            - server-install
      - client-install
      - client-lint:
          requires:
            - client-install
      - client-build:
          requires:
            - client-install
      - app-deploy:
          requires:
            - server-lint
            - client-lint
            - client-build
          filters:
            branches:
              only: master
      - prisma-deploy:
          requires:
            - deploy
          filters:
            branches:
              only: master
